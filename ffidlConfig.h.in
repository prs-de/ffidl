/* ffidlConfig.h.in.  Generated from configure.ac by autoheader.  */

/* Define if building universal (internal helper macro) */
#undef AC_APPLE_UNIVERSAL_BUILD

/* The normal alignment of `char', in bytes. */
#undef ALIGNOF_CHAR

/* The normal alignment of `double', in bytes. */
#undef ALIGNOF_DOUBLE

/* The normal alignment of `float', in bytes. */
#undef ALIGNOF_FLOAT

/* The normal alignment of `int', in bytes. */
#undef ALIGNOF_INT

/* The normal alignment of `long', in bytes. */
#undef ALIGNOF_LONG

/* The normal alignment of `long double', in bytes. */
#undef ALIGNOF_LONG_DOUBLE

/* The normal alignment of `long long', in bytes. */
#undef ALIGNOF_LONG_LONG

/* The normal alignment of `short', in bytes. */
#undef ALIGNOF_SHORT

/* The normal alignment of `void *', in bytes. */
#undef ALIGNOF_VOID_P

/* Build windows export dll */
#undef BUILD_Ffidl

/* Canonical host name */
#undef CANONICAL_HOST

/* Defined when cygwin/mingw does not support EXCEPTION DISPOSITION */
#undef EXCEPTION_DISPOSITION

/* Defined when compiler supports casting to union type. */
#undef HAVE_CAST_TO_UNION

/* Compiler support for module scope symbols */
#undef HAVE_HIDDEN

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Do we have <limits.h>? */
#undef HAVE_LIMITS_H

/* Define to 1 if the system has the type `long double'. */
#undef HAVE_LONG_DOUBLE

/* Define to 1 if the type `long double' works and has more range or precision
   than `double'. */
#undef HAVE_LONG_DOUBLE_WIDER

/* Define to 1 if the system has the type `long long'. */
#undef HAVE_LONG_LONG

/* Define to 1 if you have the `lseek64' function. */
#undef HAVE_LSEEK64

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Do we have <net/errno.h>? */
#undef HAVE_NET_ERRNO_H

/* Defined when mingw does not support SEH */
#undef HAVE_NO_SEH

/* Define to 1 if you have the `open64' function. */
#undef HAVE_OPEN64

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Is 'struct dirent64' in <sys/types.h>? */
#undef HAVE_STRUCT_DIRENT64

/* Is 'struct stat64' in <sys/stat.h>? */
#undef HAVE_STRUCT_STAT64

/* Define to 1 if you have the <sys/param.h> header file. */
#undef HAVE_SYS_PARAM_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Is off64_t in <sys/types.h>? */
#undef HAVE_TYPE_OFF64_T

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Defined when cygwin/mingw ignores VOID define in winnt.h */
#undef HAVE_WINNT_IGNORE_VOID

/* ffidl::stubsymbol can lookup in Tk stubs tables */
#undef LOOKUP_TK_STUBS

/* No Compiler support for module scope symbols */
#undef MODULE_SCOPE

/* Do we have <dirent.h>? */
#undef NO_DIRENT_H

/* Do we have <dlfcn.h>? */
#undef NO_DLFCN_H

/* Do we have <errno.h>? */
#undef NO_ERRNO_H

/* Do we have <limits.h>? */
#undef NO_LIMITS_H

/* Do we have <stdlib.h>? */
#undef NO_STDLIB_H

/* Do we have <string.h>? */
#undef NO_STRING_H

/* Do we have <sys/wait.h>? */
#undef NO_SYS_WAIT_H

/* Do we have <values.h>? */
#undef NO_VALUES_H

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The size of `char', as computed by sizeof. */
#undef SIZEOF_CHAR

/* The size of `double', as computed by sizeof. */
#undef SIZEOF_DOUBLE

/* The size of `float', as computed by sizeof. */
#undef SIZEOF_FLOAT

/* The size of `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of `long double', as computed by sizeof. */
#undef SIZEOF_LONG_DOUBLE

/* The size of `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* The size of `void *', as computed by sizeof. */
#undef SIZEOF_VOID_P

/* This a static build */
#undef STATIC_BUILD

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Is memory debugging enabled? */
#undef TCL_MEM_DEBUG

/* Are we building with threads enabled? */
#undef TCL_THREADS

/* Are wide integers to be implemented with C 'long's? */
#undef TCL_WIDE_INT_IS_LONG

/* What type should be used to define wide integers? */
#undef TCL_WIDE_INT_TYPE

/* UNDER_CE version */
#undef UNDER_CE

/* Implement callbacks */
#undef USE_CALLBACKS

/* Use libffcall for foreign function calls */
#undef USE_LIBFFCALL

/* Use libffi for foreign function calls */
#undef USE_LIBFFI

/* Use TclOO stubs */
#undef USE_TCLOO_STUBS

/* Use Tcl*Dlopen() API to load code */
#undef USE_TCL_DLOPEN

/* Use Tcl_LoadFile() API to load code */
#undef USE_TCL_LOADFILE

/* Use Tcl stubs */
#undef USE_TCL_STUBS

/* Do we want to use the threaded memory allocator? */
#undef USE_THREAD_ALLOC

/* Use Tk stubs */
#undef USE_TK_STUBS

/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most
   significant byte first (like Motorola and SPARC, unlike Intel). */
#if defined AC_APPLE_UNIVERSAL_BUILD
# if defined __BIG_ENDIAN__
#  define WORDS_BIGENDIAN 1
# endif
#else
# ifndef WORDS_BIGENDIAN
#  undef WORDS_BIGENDIAN
# endif
#endif

/* Add the _ISOC99_SOURCE flag when building */
#undef _ISOC99_SOURCE

/* Add the _LARGEFILE64_SOURCE flag when building */
#undef _LARGEFILE64_SOURCE

/* Add the _LARGEFILE_SOURCE64 flag when building */
#undef _LARGEFILE_SOURCE64

/* # needed in sys/socket.h Should OS/390 do the right thing with sockets? */
#undef _OE_SOCKETS

/* Do we really want to follow the standard? Yes we do! */
#undef _POSIX_PTHREAD_SEMANTICS

/* Do we want the reentrant OS API? */
#undef _REENTRANT

/* Do we want the thread-safe OS API? */
#undef _THREAD_SAFE

/* _WIN32_WCE version */
#undef _WIN32_WCE

/* Do we want to use the XOPEN network library? */
#undef _XOPEN_SOURCE_EXTENDED

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif
